{"ast":null,"code":"import _regeneratorRuntime from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/samet/myproject/myproject/ibet-web/src/components/reset_password.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { errors } from './errors';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { config } from '../util_config';\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\nimport IoEye from 'react-icons/lib/io/eye';\nimport TopNavbar from \"./top_navbar\"; // Material design\n\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport blue from '@material-ui/core/colors/blue';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport classNames from 'classnames';\nimport '../css/reset_password.css'; //const API_URL = process.env.REACT_APP_REST_API;\n\nvar API_URL = 'http://52.9.147.67:8080/';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: 'auto'\n    },\n    textField: {\n      flexBasis: 200,\n      width: 300,\n      height: 50\n    },\n    cssRoot: {\n      color: theme.palette.getContrastText(blue[300]),\n      backgroundColor: blue[300],\n      '&:hover': {\n        backgroundColor: blue[800]\n      }\n    }\n  };\n};\n\nvar Reset_Password =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reset_Password, _Component);\n\n  function Reset_Password(props) {\n    var _this;\n\n    _classCallCheck(this, Reset_Password);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reset_Password).call(this, props));\n\n    _this.handleClickShowPassword = function () {\n      _this.setState(function (state) {\n        return {\n          showPassword: !state.showPassword\n        };\n      });\n    };\n\n    _this.state = {\n      show_page: true,\n      password1: '',\n      password2: '',\n      error_message: '',\n      errorCode: '',\n      hidden: true,\n      showPassword: false,\n      button_type: 'submit-button-disable',\n      button_disable: true,\n      live_check_password2: false,\n      passward_too_simple: false\n    };\n    _this.onInputChange_password1 = _this.onInputChange_password1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onInputChange_password2 = _this.onInputChange_password2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleShow = _this.toggleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.check_valid = _this.check_valid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Do not delete this, I saved it for future use\n  // componentDidMount() {\n  //     const body = {\n  //         token: this.props.location.pathname.slice(16)\n  //     }\n  //     axios.post(API_URL + 'users/api/reset-password/verify-token/', body, config)\n  //     .then(res => {\n  //       // does nothing\n  //     }).catch(err => {\n  //       this.setState({show_page: false})\n  //     })\n  // }\n\n\n  _createClass(Reset_Password, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var check = localStorage.getItem('forget-password-inprogress');\n\n      if (!check) {\n        this.setState({\n          show_page: false\n        });\n      }\n    }\n  }, {\n    key: \"onInputChange_password1\",\n    value: function () {\n      var _onInputChange_password = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  password1: event.target.value\n                });\n\n                if (!event.target.value.match(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/)) {\n                  this.setState({\n                    passward_too_simple: true,\n                    button_disable: true\n                  });\n                } else {\n                  this.setState({\n                    passward_too_simple: false\n                  });\n                }\n\n                if (!(event.target.value !== this.state.password2)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.setState({\n                  live_check_password2: true,\n                  button_disable: true\n                });\n                _context.next = 8;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return this.setState({\n                  live_check_password2: false\n                });\n\n              case 8:\n                this.check_valid();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onInputChange_password1(_x) {\n        return _onInputChange_password.apply(this, arguments);\n      }\n\n      return onInputChange_password1;\n    }()\n  }, {\n    key: \"onInputChange_password2\",\n    value: function () {\n      var _onInputChange_password2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setState({\n                  password2: event.target.value\n                });\n\n                if (!(event.target.value !== this.state.password1)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                this.setState({\n                  live_check_password2: true,\n                  button_disable: true\n                });\n                _context2.next = 7;\n                break;\n\n              case 5:\n                _context2.next = 7;\n                return this.setState({\n                  live_check_password2: false\n                });\n\n              case 7:\n                this.check_valid();\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onInputChange_password2(_x2) {\n        return _onInputChange_password2.apply(this, arguments);\n      }\n\n      return onInputChange_password2;\n    }()\n  }, {\n    key: \"check_valid\",\n    value: function check_valid() {\n      if (this.state.password1 && this.state.password2 && this.state.password1 === this.state.password2) {\n        this.setState({\n          button_disable: false\n        });\n      } else {\n        this.setState({\n          button_disable: true,\n          live_check_password2: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleShow\",\n    value: function toggleShow() {\n      this.setState({\n        hidden: !this.state.hidden\n      });\n    }\n  }, {\n    key: \"onFormSubmit\",\n    // onFormSubmit(event){\n    //     event.preventDefault();\n    //     const body = {\n    //         token: this.props.location.pathname.slice(16),\n    //         password: this.state.password1\n    //     }\n    //     if (this.state.password1 !== this.state.password2) {\n    //         this.setState({ errorCode: errors.PASSWORD_NOT_MATCH });\n    //     } else if ( this.state.password1.length < 8){ \n    //         this.setState({ errorCode: errors.PASSWORD_NOT_VALID });\n    //     } else {\n    //         this.setState({ errorCode: '' });\n    //         axios.post(API_URL + 'users/api/reset-password/confirm/', body, config)\n    //         .then(res => {\n    //             this.props.history.push(\"/reset_password_done\")\n    //         })\n    //     }\n    // }\n    value: function onFormSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var email = this.props.match.params.email;\n      axios.post(API_URL + \"users/api/changeandresetpassword/\", {\n        email: email,\n        password: this.state.password1\n      }, config).then(function (res) {\n        var formatMessage = _this2.props.intl.formatMessage;\n        var message = formatMessage({\n          id: \"reset_password.done\"\n        });\n        localStorage.removeItem('forget-password-inprogress');\n        alert(message);\n\n        _this2.props.history.push(\"/login\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n\n      var showErrors = function showErrors() {\n        if (_this3.state.errorCode === errors.PASSWORD_NOT_MATCH) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"reset_password.password_not_match\",\n            defaultMessage: \"Password not match\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }));\n        } else if (_this3.state.errorCode === errors.PASSWORD_NOT_VALID) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"reset_password.password_not_valid\",\n            defaultMessage: \"Password not valid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }));\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.state.show_page ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(TopNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"reset-password-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.new_password\",\n        defaultMessage: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-adornment-password\",\n        className: classNames(classes.margin, classes.textField),\n        variant: \"outlined\",\n        type: this.state.showPassword ? 'text' : 'password',\n        label: \"Password\",\n        value: this.state.password1,\n        onChange: this.onInputChange_password1,\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })), this.state.password1 && React.createElement(PasswordStrengthMeter, {\n        password: this.state.password1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.confirm_password\",\n        defaultMessage: \"Confirm Password:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-adornment-password\",\n        className: classNames(classes.margin, classes.textField),\n        variant: \"outlined\",\n        type: this.state.showPassword ? 'text' : 'password',\n        label: \"Password\",\n        value: this.state.password2,\n        onChange: this.onInputChange_password2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: this.state.button_disable,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: this.state.button_type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.confirm\",\n        defaultMessage: \"Confirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), this.state.live_check_password2 && React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.password_not_match\",\n        defaultMessage: \"Password not match\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), this.state.passward_too_simple && React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.simple\",\n        defaultMessage: \"Password is too simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      })))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(TopNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"reset-password-form\",\n        style: {\n          fontSize: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.page_not_valid\",\n        defaultMessage: \"This page no longer exists\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Reset_Password;\n}(Component);\n\nexport default withStyles(styles)(injectIntl(withRouter(Reset_Password)));","map":{"version":3,"sources":["/Users/samet/myproject/myproject/ibet-web/src/components/reset_password.js"],"names":["React","Component","axios","errors","withRouter","FormattedMessage","injectIntl","config","PasswordStrengthMeter","IoEye","TopNavbar","withStyles","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","Button","blue","FormControlLabel","Checkbox","classNames","API_URL","styles","theme","root","display","flexWrap","margin","textField","flexBasis","width","height","cssRoot","color","palette","getContrastText","backgroundColor","Reset_Password","props","handleClickShowPassword","setState","state","showPassword","show_page","password1","password2","error_message","errorCode","hidden","button_type","button_disable","live_check_password2","passward_too_simple","onInputChange_password1","bind","onInputChange_password2","onFormSubmit","toggleShow","check_valid","check","localStorage","getItem","event","target","value","match","preventDefault","email","params","post","password","then","res","formatMessage","intl","message","id","removeItem","alert","history","push","classes","showErrors","PASSWORD_NOT_MATCH","PASSWORD_NOT_VALID","endAdornment","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { errors } from './errors';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { config } from '../util_config';\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\nimport IoEye from 'react-icons/lib/io/eye';\nimport TopNavbar from \"./top_navbar\";\n\n\n// Material design\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport blue from '@material-ui/core/colors/blue';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport classNames from 'classnames';\n\nimport '../css/reset_password.css';\n\n//const API_URL = process.env.REACT_APP_REST_API;\nconst API_URL = 'http://52.9.147.67:8080/';\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n\n    margin: {\n      margin: 'auto',\n    },\n\n    textField: {\n      flexBasis: 200,\n      width: 300,\n      height: 50\n    },\n\n    cssRoot: {\n        color: theme.palette.getContrastText(blue[300]),\n        backgroundColor: blue[300],\n        '&:hover': {\n          backgroundColor: blue[800],\n        },\n      },\n  });\n\n\nclass Reset_Password extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n           show_page: true,\n           password1: '',\n           password2: '',\n           error_message: '',\n           errorCode: '',\n           hidden: true,\n           showPassword: false,\n           button_type: 'submit-button-disable',\n           button_disable: true,\n           live_check_password2: false,\n           passward_too_simple: false\n        }\n\n        this.onInputChange_password1  = this.onInputChange_password1.bind(this);\n        this.onInputChange_password2  = this.onInputChange_password2.bind(this);\n        this.onFormSubmit             = this.onFormSubmit.bind(this);\n        this.toggleShow               = this.toggleShow.bind(this);\n        this.check_valid   = this.check_valid.bind(this);\n    }\n\n    \n    // Do not delete this, I saved it for future use\n\n    // componentDidMount() {\n\n    //     const body = {\n    //         token: this.props.location.pathname.slice(16)\n    //     }\n\n    //     axios.post(API_URL + 'users/api/reset-password/verify-token/', body, config)\n    //     .then(res => {\n    //       // does nothing\n    //     }).catch(err => {\n    //       this.setState({show_page: false})\n    //     })\n    // }\n\n    componentDidMount() {\n        const check = localStorage.getItem('forget-password-inprogress')\n        if (!check){\n            this.setState({show_page: false})\n        }\n    }\n    \n\n    async onInputChange_password1(event){\n        this.setState({password1: event.target.value});\n        \n        if (!event.target.value.match(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/)){\n            this.setState({passward_too_simple: true, button_disable: true})\n        }else{\n            this.setState({passward_too_simple: false})\n        }\n\n        if (event.target.value !== this.state.password2){\n            this.setState({live_check_password2: true, button_disable: true})\n        }else{\n            await this.setState({live_check_password2: false})\n        }\n        \n        this.check_valid()\n    }\n\n    async onInputChange_password2(event){\n        this.setState({password2: event.target.value});\n\n        if (event.target.value !== this.state.password1){\n            this.setState({live_check_password2: true, button_disable: true})\n        }else{\n            await this.setState({live_check_password2: false})\n        }\n        \n        this.check_valid()\n    }\n\n    check_valid(){\n        if (this.state.password1 &&  this.state.password2 && this.state.password1 === this.state.password2){\n            this.setState({button_disable: false})\n        }else{\n            this.setState({button_disable: true, live_check_password2: true})\n        }\n    }\n\n    toggleShow() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n      handleClickShowPassword = () => {\n        this.setState(state => ({ showPassword: !state.showPassword }));\n    };\n\n    // onFormSubmit(event){\n    //     event.preventDefault();\n\n    //     const body = {\n    //         token: this.props.location.pathname.slice(16),\n    //         password: this.state.password1\n    //     }\n        \n    //     if (this.state.password1 !== this.state.password2) {\n    //         this.setState({ errorCode: errors.PASSWORD_NOT_MATCH });\n    //     } else if ( this.state.password1.length < 8){ \n    //         this.setState({ errorCode: errors.PASSWORD_NOT_VALID });\n    //     } else {\n    //         this.setState({ errorCode: '' });\n    //         axios.post(API_URL + 'users/api/reset-password/confirm/', body, config)\n    //         .then(res => {\n    //             this.props.history.push(\"/reset_password_done\")\n    //         })\n    //     }\n    // }\n\n    onFormSubmit(event){\n        event.preventDefault();\n\n        const { email } = this.props.match.params;\n\n        axios.post(API_URL + `users/api/changeandresetpassword/`,{\n            email: email,\n            password: this.state.password1\n        }, config)\n        .then(res => {\n            const { formatMessage } = this.props.intl;\n            const message = formatMessage({ id: \"reset_password.done\" });\n            localStorage.removeItem('forget-password-inprogress')\n            alert(message)\n            this.props.history.push(\"/login\");\n        })\n    }\n\n    render(){\n\n        const { classes } = this.props;\n\n        const showErrors = () => {\n            if (this.state.errorCode === errors.PASSWORD_NOT_MATCH) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"reset_password.password_not_match\" defaultMessage='Password not match' /> \n                    </div>\n                );\n            } else if (this.state.errorCode === errors.PASSWORD_NOT_VALID) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"reset_password.password_not_valid\" defaultMessage='Password not valid' /> \n                    </div>\n                );\n            } \n        }\n\n        return (\n            <div> \n                {\n                    this.state.show_page ?\n                    <div>\n                        <TopNavbar />\n                        \n                        <div className='reset-password-form'> \n                            <div>\n                                <FormattedMessage id=\"reset_password.new_password\" defaultMessage='New Password' />      \n                            </div>\n\n                            <form onSubmit={this.onFormSubmit} >\n\n                                <div> \n                                    <TextField\n                                        id=\"outlined-adornment-password\"\n                                        className={classNames(classes.margin, classes.textField)}\n                                        variant=\"outlined\"\n                                        type={this.state.showPassword ? 'text' : 'password'}\n                                        label=\"Password\"\n                                        value={this.state.password1}\n                                        onChange={this.onInputChange_password1}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                aria-label=\"Toggle password visibility\"\n                                                onClick={this.handleClickShowPassword}\n                                                >\n                                                {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n\n                                { \n                                    this.state.password1 && <PasswordStrengthMeter password={this.state.password1} />\n                                }\n\n                                <br/>\n                                \n                                <div>\n                                    <FormattedMessage id=\"reset_password.confirm_password\" defaultMessage='Confirm Password:' />      \n                                </div>\n\n                                <div> \n                                    <TextField\n                                        id=\"outlined-adornment-password\"\n                                        className={classNames(classes.margin, classes.textField)}\n                                        variant=\"outlined\"\n                                        type={this.state.showPassword ? 'text' : 'password'}\n                                        label=\"Password\"\n                                        value={this.state.password2}\n                                        onChange={this.onInputChange_password2}\n                                    />\n                                </div>\n\n                                <br/>\n                                <br/>\n                                \n                                <Button \n                                    disabled = {this.state.button_disable} \n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    type=\"submit\" \n                                    className={this.state.button_type}\n                                > \n                                    <FormattedMessage id=\"reset_password.confirm\" defaultMessage='Confirm' />      \n                                </Button>\n                           \n                            </form>\n\n                            {\n                                 \n                                    this.state.live_check_password2 && \n                                    <div style={{color: 'red'}}>\n                                        <FormattedMessage id=\"reset_password.password_not_match\" defaultMessage='Password not match' />\n                                    </div>\n                            }\n\n                            <br/>\n\n                            {\n                                this.state.passward_too_simple && \n                                <div style={{color: 'red'}}>\n                                    <FormattedMessage id=\"reset_password.simple\" defaultMessage='Password is too simple' />\n                                </div>\n                            }\n\n                        </div>\n                    </div>\n                    : \n                    <div> \n\n                        <TopNavbar />\n\n                        <div className='reset-password-form' style={{fontSize: '20px'}}> \n                            <FormattedMessage id=\"reset_password.page_not_valid\" defaultMessage='This page no longer exists' /> \n                        </div>\n\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default  withStyles(styles)(injectIntl(withRouter(Reset_Password)));\n"]},"metadata":{},"sourceType":"module"}