{"ast":null,"code":"import _classCallCheck from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samet/myproject/myproject/ibet-web/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //import logo from './logo.svg';\n\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\nimport { IntlProvider } from 'react-intl';\nimport { messages } from './components/messages';\nimport { getLanguage } from './actions/language';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lang: 'zh'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getLanguage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var lang = this.props.lang;\n      return (// <Provider store={this.store}>\n        React.createElement(IntlProvider, {\n          locale: lang,\n          messages: messages[lang],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(BaseRouter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }))) // </Provider>\n\n      );\n    }\n  }]);\n\n  return App;\n}(Component); // export default App;\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lang: state.language.lang\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getLanguage: getLanguage\n})(App);","map":{"version":3,"sources":["/Users/samet/myproject/myproject/ibet-web/src/App.js"],"names":["React","Component","connect","BrowserRouter","Router","BaseRouter","IntlProvider","messages","getLanguage","App","state","lang","props","mapStateToProps","language"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;IAEMC,G;;;;;;;;;;;;;;;;;UAMJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;;;;;wCAIY;AAClB,WAAKC,KAAL,CAAWJ,WAAX;AACD;;;6BAEQ;AAAA,UACCG,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAEP,aACE;AACA,4BAAC,YAAD;AAAc,UAAA,MAAM,EAAEA,IAAtB;AAA4B,UAAA,QAAQ,EAAEJ,QAAQ,CAACI,IAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAFF,CAOE;;AAPF;AASD;;;;EAzBeV,S,GA4BlB;;;AAEA,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACI,QAAN,CAAeH;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACW,eAAD,EAAkB;AAAEL,EAAAA,WAAW,EAAXA;AAAF,CAAlB,CAAP,CAA0CC,GAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\nimport { IntlProvider } from 'react-intl';\nimport { messages } from './components/messages';\nimport { getLanguage } from './actions/language';\n\nclass App extends Component {\n\n  // constructor() {\n  //   this.store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n  // }\n\n  state = {\n    lang: 'zh',\n  }\n\n  componentDidMount() {\n    this.props.getLanguage();\n  }\n\n  render() {\n    const { lang } = this.props; \n    return (\n      // <Provider store={this.store}>\n      <IntlProvider locale={lang} messages={messages[lang]}>\n        <Router>\n          <BaseRouter />\n        </Router>\n      </IntlProvider>\n      // </Provider>\n    );\n  }\n}\n\n// export default App;\n\nconst mapStateToProps = (state) => {\n  return {\n      lang: state.language.lang,\n  }\n}\n\nexport default connect(mapStateToProps, { getLanguage })(App);\n"]},"metadata":{},"sourceType":"module"}