{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../util_config\"; //const API_URL = process.env.REACT_APP_REST_API;\n\nvar API_URL = 'http://52.9.147.67:8080/';\n\nvar setLanguageState = function setLanguageState(language) {\n  return {\n    type: 'SET_LANGUAGE',\n    lang: language\n  };\n}; // const config = {\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     withCredentials: true,\n// };\n\n\nexport var setLanguage = function setLanguage(language) {\n  return function (dispatch) {\n    return axios.post(API_URL + 'users/api/language/', {\n      languageCode: language\n    }, config).then(function (res) {\n      if (language.indexOf('zh') >= 0) {\n        language = 'zh';\n      }\n\n      dispatch(setLanguageState(language));\n      return Promise.resolve(res);\n    }).catch(function (err) {\n      // console.log(err.response);\n      return Promise.reject(err.response);\n    });\n  };\n};\nexport var getLanguage = function getLanguage() {\n  return function (dispatch) {\n    return axios.get(API_URL + 'users/api/language/', config).then(function (res) {\n      var language = res.data.languageCode;\n\n      if (language.indexOf('zh') >= 0) {\n        language = 'zh';\n      } // console.log(res);\n\n\n      dispatch(setLanguageState(language));\n      return Promise.resolve(language);\n    }).catch(function (err) {\n      // console.log(err.response);\n      return Promise.reject(err.response);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/samet/myproject/myproject/ibet-web/src/actions/language.js"],"names":["axios","config","API_URL","setLanguageState","language","type","lang","setLanguage","dispatch","post","languageCode","then","res","indexOf","Promise","resolve","catch","err","reject","response","getLanguage","get","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,gBAAvB,C,CACA;;AACA,IAAMC,OAAO,GAAG,0BAAhB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAE,cADH;AAEHC,IAAAA,IAAI,EAAEF;AAFH,GAAP;AAIH,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACH,QAAD,EAAc;AAErC,SAAO,UAACI,QAAD,EAAc;AACjB,WAAOR,KAAK,CAACS,IAAN,CAAWP,OAAO,GAAG,qBAArB,EAA4C;AAC/CQ,MAAAA,YAAY,EAAEN;AADiC,KAA5C,EAEJH,MAFI,EAGNU,IAHM,CAGD,UAAAC,GAAG,EAAI;AACT,UAAIR,QAAQ,CAACS,OAAT,CAAiB,IAAjB,KAA0B,CAA9B,EAAiC;AAC7BT,QAAAA,QAAQ,GAAG,IAAX;AACH;;AACDI,MAAAA,QAAQ,CAACL,gBAAgB,CAACC,QAAD,CAAjB,CAAR;AACA,aAAOU,OAAO,CAACC,OAAR,CAAgBH,GAAhB,CAAP;AACH,KATM,EAUNI,KAVM,CAUA,UAAAC,GAAG,EAAI;AACV;AACA,aAAOH,OAAO,CAACI,MAAR,CAAeD,GAAG,CAACE,QAAnB,CAAP;AACH,KAbM,CAAP;AAcH,GAfD;AAgBH,CAlBM;AAqBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAO,UAACZ,QAAD,EAAc;AACjB,WAAOR,KAAK,CAACqB,GAAN,CAAUnB,OAAO,GAAG,qBAApB,EAA2CD,MAA3C,EACNU,IADM,CACD,UAAAC,GAAG,EAAI;AACT,UAAIR,QAAQ,GAAGQ,GAAG,CAACU,IAAJ,CAASZ,YAAxB;;AACA,UAAIN,QAAQ,CAACS,OAAT,CAAiB,IAAjB,KAA0B,CAA9B,EAAiC;AAC7BT,QAAAA,QAAQ,GAAG,IAAX;AACH,OAJQ,CAKT;;;AACAI,MAAAA,QAAQ,CAACL,gBAAgB,CAACC,QAAD,CAAjB,CAAR;AACA,aAAOU,OAAO,CAACC,OAAR,CAAgBX,QAAhB,CAAP;AACH,KATM,EAUNY,KAVM,CAUA,UAAAC,GAAG,EAAI;AACV;AACA,aAAOH,OAAO,CAACI,MAAR,CAAeD,GAAG,CAACE,QAAnB,CAAP;AACH,KAbM,CAAP;AAcH,GAfD;AAgBH,CAjBM","sourcesContent":["import axios from \"axios\";\nimport { config } from \"../util_config\";\n//const API_URL = process.env.REACT_APP_REST_API;\nconst API_URL = 'http://52.9.147.67:8080/';\n\nconst setLanguageState = (language) => {\n    return {\n        type: 'SET_LANGUAGE',\n        lang: language\n    }\n}\n\n// const config = {\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     withCredentials: true,\n// };\n\nexport const setLanguage = (language) => {\n    \n    return (dispatch) => {\n        return axios.post(API_URL + 'users/api/language/', {\n            languageCode: language\n        }, config)\n        .then(res => {\n            if (language.indexOf('zh') >= 0) {\n                language = 'zh';\n            }\n            dispatch(setLanguageState(language));\n            return Promise.resolve(res);\n        })\n        .catch(err => {\n            // console.log(err.response);\n            return Promise.reject(err.response);\n        })\n    }\n}\n\n\nexport const getLanguage = () => {\n    return (dispatch) => {\n        return axios.get(API_URL + 'users/api/language/', config)\n        .then(res => {\n            let language = res.data.languageCode;\n            if (language.indexOf('zh') >= 0) {\n                language = 'zh';\n            }\n            // console.log(res);\n            dispatch(setLanguageState(language));\n            return Promise.resolve(language);\n        })\n        .catch(err => {\n            // console.log(err.response);\n            return Promise.reject(err.response);\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}