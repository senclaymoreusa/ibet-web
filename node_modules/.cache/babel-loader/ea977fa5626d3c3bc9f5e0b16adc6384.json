{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../util_config\";\nvar API_URL = process.env.REACT_APP_REST_API;\nexport var AUTH_RESULT_SUCCESS = 0;\nexport var AUTH_RESULT_FAIL = 1;\nexport var authStart = function authStart() {\n  return {\n    type: 'AUTH_START'\n  };\n};\nexport var authSuccess = function authSuccess(token) {\n  return {\n    type: 'AUTH_SUCCESS',\n    token: token\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: 'AUTH_FAIL',\n    error: error\n  };\n}; // const config = {\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     withCredentials: true,\n// };\n\nexport var authLogin = function authLogin(username, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    return axios.post(API_URL + 'users/api/login/', {\n      username: username,\n      password: password\n    }, config).then(function (res) {\n      var token = res.data.key;\n\n      if (!token || token === undefined) {\n        dispatch(logout());\n      }\n\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n      return Promise.resolve();\n    }).catch(function (err) {\n      dispatch(authFail(err.response.data.detail));\n      return Promise.reject(err.response.data.detail);\n    });\n  };\n};\nexport var FacebookauthLogin = function FacebookauthLogin(username, email) {\n  return function (dispatch) {\n    dispatch(authStart());\n    return axios.post(API_URL + 'users/api/facebooklogin/', {\n      username: username,\n      email: email\n    }, config).then(function (res) {\n      var token = res.data.key;\n\n      if (!token || token === undefined) {\n        dispatch(logout());\n      }\n\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n      return Promise.resolve();\n    }).catch(function (err) {\n      dispatch(authFail(err.response.data.detail));\n      return Promise.reject(err.response.data.detail);\n    });\n  };\n};\nexport var authSignup = function authSignup(username, email, password1, password2, first_name, last_name, phone, date_of_birth, street_address_1, street_address_2, country, city, zipcode, state, gender, over_eighteen, contact_option, preferred_team, title) {\n  return function (dispatch) {\n    dispatch(authStart()); // const config = {\n    //   headers: {\n    //     \"Content-Type\": \"application/json\"\n    //   }\n    // };\n\n    var body = JSON.stringify({\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2,\n      first_name: first_name,\n      last_name: last_name,\n      phone: phone,\n      date_of_birth: date_of_birth,\n      street_address_1: street_address_1,\n      street_address_2: street_address_2,\n      country: country,\n      city: city,\n      zipcode: zipcode,\n      state: state,\n      gender: gender,\n      over_eighteen: over_eighteen,\n      contact_option: contact_option,\n      preferred_team: preferred_team,\n      title: title\n    });\n    return axios.post(API_URL + 'users/api/signup/', body, config).then(function (res) {\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n      return Promise.resolve();\n    }).catch(function (err) {\n      dispatch(authFail(err));\n      return Promise.reject(err);\n    });\n  };\n};\nexport var FacebookSignup = function FacebookSignup(username, email) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var body = JSON.stringify({\n      username: username,\n      email: email\n    });\n    return axios.post(API_URL + 'users/api/facebooksignup/', body, config).then(function (res) {\n      var token = res.data.key;\n      var expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n      return Promise.resolve();\n    }).catch(function (err) {\n      dispatch(authFail(err));\n      return Promise.reject(err);\n    });\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var postLogout = function postLogout() {\n  var body = JSON.stringify({});\n  return axios.post(API_URL + 'users/api/logout/', body, config).then(function (res) {\n    window.location.reload();\n    console.log(res);\n  }).catch(function (err) {\n    window.location.reload();\n    console.log(err);\n  });\n};\nexport var logout = function logout() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('facebook');\n  localStorage.removeItem('facebookObj');\n  return {\n    type: 'AUTH_LOGOUT'\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n\n    if (!token || token === undefined) {\n      // check token first\n      dispatch(logout());\n      return Promise.resolve(AUTH_RESULT_FAIL);\n    } else {\n      // check token expiration time\n      var expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n        return Promise.resolve(AUTH_RESULT_FAIL);\n      } else {\n        // check whether user is blocked\n        // const config = {\n        //     headers: {\n        //     \"Content-Type\": \"application/json\"\n        //     }\n        // };\n        config.headers[\"Authorization\"] = \"Token \".concat(token);\n        return axios.get(API_URL + 'users/api/user/', config).then(function (res) {\n          if (res.data.block || !res.data.active) {\n            dispatch(logout());\n            return Promise.resolve(AUTH_RESULT_FAIL);\n          } else {\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            return Promise.resolve(AUTH_RESULT_SUCCESS);\n          }\n        }).catch(function (err) {\n          dispatch(authFail(err.response.data.detail));\n          dispatch(logout());\n          delete config.headers[\"Authorization\"];\n          return Promise.resolve(AUTH_RESULT_FAIL);\n        });\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/samet/myproject/myproject/ibet-web/src/actions/auth.js"],"names":["axios","config","API_URL","process","env","REACT_APP_REST_API","AUTH_RESULT_SUCCESS","AUTH_RESULT_FAIL","authStart","type","authSuccess","token","authFail","error","authLogin","username","password","dispatch","post","then","res","data","key","undefined","logout","expirationDate","Date","getTime","localStorage","setItem","checkAuthTimeout","Promise","resolve","catch","err","response","detail","reject","FacebookauthLogin","email","authSignup","password1","password2","first_name","last_name","phone","date_of_birth","street_address_1","street_address_2","country","city","zipcode","state","gender","over_eighteen","contact_option","preferred_team","title","body","JSON","stringify","FacebookSignup","expirationTime","setTimeout","postLogout","window","location","reload","console","log","removeItem","authCheckState","getItem","headers","get","block","active"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { config } from \"../util_config\";\n\nconst API_URL = process.env.REACT_APP_REST_API;\n\nexport const AUTH_RESULT_SUCCESS = 0;\nexport const AUTH_RESULT_FAIL = 1;\n\nexport const authStart = () => {\n    return {\n      type: 'AUTH_START'\n    }\n  }\n  \n  export const authSuccess = (token) => {\n    return {\n      type: 'AUTH_SUCCESS',\n      token: token\n    }\n  }\n  \n  export const authFail = (error) => {\n    return {\n      type: 'AUTH_FAIL',\n      error: error\n    }\n  }\n\n// const config = {\n//     headers: {\n//         'Content-Type': 'application/json',\n//     },\n//     withCredentials: true,\n// };\n  \n  export const authLogin = (username, password) => {\n    return (dispatch) => {\n        dispatch(authStart());\n        return axios.post(API_URL + 'users/api/login/', {\n            username: username,\n            password: password\n        }, config)\n        .then(res => {\n            const token = res.data.key;\n            if (!token || token === undefined) {\n                dispatch(logout());\n            }\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            return Promise.resolve();\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.detail))\n            return Promise.reject(err.response.data.detail);\n        })\n        \n    }\n  }\n\n  export const FacebookauthLogin = (username, email) => {\n    return (dispatch) => {\n        dispatch(authStart());\n        return axios.post(API_URL + 'users/api/facebooklogin/', {\n            username: username,\n            email: email\n        }, config)\n        .then(res => {\n            const token = res.data.key;\n            if (!token || token === undefined) {\n                dispatch(logout());\n            }\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            return Promise.resolve();\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.detail))\n            return Promise.reject(err.response.data.detail);\n        })\n        \n    }\n  }\n\n  export const authSignup = (username, email, password1, password2, first_name, last_name, phone, date_of_birth, street_address_1, street_address_2, country, city, zipcode, state, gender, over_eighteen, contact_option, preferred_team, title) => {\n    return dispatch => {\n        dispatch(authStart());\n        // const config = {\n        //   headers: {\n        //     \"Content-Type\": \"application/json\"\n        //   }\n        // };\n        const body = JSON.stringify({ username, email, password1, password2, first_name, last_name, phone, date_of_birth,\n          street_address_1, street_address_2, country, city, zipcode, state, gender, over_eighteen, contact_option, preferred_team, title\n        });\n\n        return axios.post(API_URL + 'users/api/signup/', body, config)\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            return Promise.resolve()\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n            return Promise.reject(err)\n        })\n    }\n}\n\nexport const FacebookSignup = (username, email) => {\n  return dispatch => {\n      dispatch(authStart());\n      const body = JSON.stringify({ username, email });\n\n      return axios.post(API_URL + 'users/api/facebooksignup/', body, config)\n      .then(res => {\n          const token = res.data.key;\n          const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n          localStorage.setItem('token', token);\n          localStorage.setItem('expirationDate', expirationDate);\n          dispatch(authSuccess(token));\n          dispatch(checkAuthTimeout(3600));\n          return Promise.resolve()\n      })\n      .catch(err => {\n          dispatch(authFail(err))\n          return Promise.reject(err)\n      })\n  }\n}\n  \n  export const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n  }\n\n  export const postLogout = () => {\n    const body = JSON.stringify({});\n    return axios.post(API_URL + 'users/api/logout/', body, config)\n    .then(res => {\n        window.location.reload();\n        console.log(res);\n    })\n    .catch(err => {\n        window.location.reload();\n        console.log(err);\n    });\n  }\n  \n  export const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('facebook');\n    localStorage.removeItem('facebookObj');\n    return {\n        type: 'AUTH_LOGOUT'\n    };\n  }\n\n  export const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token || token === undefined) {\n            // check token first\n            dispatch(logout());\n            return Promise.resolve(AUTH_RESULT_FAIL);\n        } else {\n            // check token expiration time\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n                return Promise.resolve(AUTH_RESULT_FAIL);\n            } else {\n                // check whether user is blocked\n                // const config = {\n                //     headers: {\n                //     \"Content-Type\": \"application/json\"\n                //     }\n                // };\n                config.headers[\"Authorization\"] = `Token ${token}`;\n        \n                return axios.get(API_URL + 'users/api/user/', config)\n                .then(res => {\n                    if (res.data.block || ! res.data.active) {\n                        dispatch(logout());\n                        return Promise.resolve(AUTH_RESULT_FAIL);\n                    } else {\n                        dispatch(authSuccess(token));\n                        dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n                        return Promise.resolve(AUTH_RESULT_SUCCESS);\n                    }\n                })\n                .catch(err => {\n                    dispatch(authFail(err.response.data.detail))\n                    dispatch(logout());\n                    delete config.headers[\"Authorization\"]\n                    return Promise.resolve(AUTH_RESULT_FAIL);\n                });\n            }\n        }\n    }\n}  \n"]},"metadata":{},"sourceType":"module"}