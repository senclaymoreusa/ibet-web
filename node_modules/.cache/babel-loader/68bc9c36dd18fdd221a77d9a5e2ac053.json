{"ast":null,"code":"import _classCallCheck from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samet/myproject/myproject/ibet-web/src/components/game_list.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport TopNavbar from \"./top_navbar\";\nimport { game_detail } from '../actions';\nimport { config } from '../util_config';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport '../css/game_list.css';\n\nvar MenuItem = function MenuItem(_ref) {\n  var name = _ref.name,\n      selected = _ref.selected,\n      image = _ref.image,\n      pk = _ref.pk,\n      name_zh = _ref.name_zh,\n      name_fr = _ref.name_fr,\n      language = _ref.language;\n\n  if (language === 'zh' && name_zh) {\n    return React.createElement(\"div\", {\n      key: name,\n      className: \"menu-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/game_detail/\".concat(pk),\n      style: {\n        textDecoration: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, name_zh, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: image,\n      height: \"150\",\n      width: \"150\",\n      alt: \"Not available\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })));\n  } else if (language === 'fr' && name_fr) {\n    return React.createElement(\"div\", {\n      key: name,\n      className: \"menu-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/game_detail/\".concat(pk),\n      style: {\n        textDecoration: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, name_fr, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: image,\n      height: \"150\",\n      width: \"150\",\n      alt: \"Not available\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"menu-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/game_detail/\".concat(pk),\n      style: {\n        textDecoration: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, name, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: image,\n      height: \"150\",\n      width: \"150\",\n      alt: \"Not available\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n};\n\nvar Menu = function Menu(list, language) {\n  return list.map(function (item) {\n    var name = item.name;\n    var image = item.image;\n    var pk = item.pk;\n    var name_zh = item.name_zh;\n    var name_fr = item.name_fr;\n    return React.createElement(MenuItem, {\n      name: name,\n      key: name,\n      image: image,\n      pk: pk,\n      name_zh: name_zh,\n      name_fr: name_fr,\n      language: language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  });\n};\n\nvar Arrow = function Arrow(_ref2) {\n  var text = _ref2.text,\n      className = _ref2.className;\n  return React.createElement(\"div\", {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, text);\n};\n\nvar ArrowLeft = Arrow({\n  text: '<',\n  className: 'arrow-prev'\n});\nvar ArrowRight = Arrow({\n  text: '>',\n  className: 'arrow-next'\n}); //const API_URL = process.env.REACT_APP_REST_API;\n\nvar API_URL = 'http://52.9.147.67:8080/';\n\nvar Game_List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game_List, _Component);\n\n  function Game_List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game_List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game_List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      games: []\n    };\n    return _this;\n  }\n\n  _createClass(Game_List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var term = this.props.match.params.term; // console.log(this.props.match.params);\n      // const game_type = localStorage.getItem('game_type');\n\n      var URL = API_URL + 'users/api/games/?term=' + term;\n      axios.get(URL, config).then(function (res) {\n        _this2.setState({\n          games: res.data\n        });\n\n        _this2.setState({\n          game_to_render: Menu(_this2.state.games, _this2.props.lang)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var games = this.state.games;\n      var menu = this.state.game_to_render;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TopNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"game-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(ScrollMenu, {\n        data: menu,\n        arrowLeft: ArrowLeft,\n        arrowRight: ArrowRight,\n        hideArrows: true,\n        hideSingleArrow: true,\n        dragging: false,\n        wheel: false,\n        alignCenter: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game_List;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    game_type: state.general.game_type,\n    lang: state.language.lang\n  };\n};\n\nexport default connect(mapStateToProps, {\n  game_detail: game_detail\n})(Game_List);","map":{"version":3,"sources":["/Users/samet/myproject/myproject/ibet-web/src/components/game_list.js"],"names":["React","Component","axios","connect","NavLink","FormattedMessage","TopNavbar","game_detail","config","ScrollMenu","MenuItem","name","selected","image","pk","name_zh","name_fr","language","textDecoration","Menu","list","map","item","Arrow","text","className","ArrowLeft","ArrowRight","API_URL","Game_List","state","games","term","props","match","params","URL","get","then","res","setState","data","game_to_render","lang","menu","mapStateToProps","game_type","general"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport TopNavbar from \"./top_navbar\";\nimport { game_detail } from '../actions';\nimport { config } from '../util_config';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport '../css/game_list.css';\n\nconst MenuItem = ({name, selected, image, pk, name_zh, name_fr, language}) => {\n    if (language === 'zh' && name_zh){\n      return (\n        <div key={name} className='menu-item'>\n          <NavLink to = {`/game_detail/${pk}`} style={{ textDecoration: 'none' }}> \n            {name_zh} \n            <br/>\n            <img src={image} height = \"150\" width=\"150\" alt = 'Not available'/>\n          </NavLink>\n        </div>\n      )\n    }else if (language === 'fr' && name_fr) {\n      return (\n        <div key={name} className='menu-item'>\n        <NavLink to = {`/game_detail/${pk}`} style={{ textDecoration: 'none' }}> \n          {name_fr} \n          <br/>\n          <img src={image} height = \"150\" width=\"150\" alt = 'Not available'/>\n        </NavLink>\n      </div>\n      )\n    }else{\n      return (\n      <div className='menu-item'>\n        <NavLink to = {`/game_detail/${pk}`} style={{ textDecoration: 'none' }} >\n          {name}\n          <br/>\n          <img src={image} height = \"150\" width=\"150\" alt = 'Not available'/>\n        </NavLink>\n      </div>\n      )\n    }\n  };\n   \n\nconst Menu = (list, language) =>\n    list.map(item => {\n      \n    const {name} = item;\n    const {image} = item;\n    const {pk} = item;\n    const {name_zh} = item;\n    const {name_fr} = item;\n   \n    return <MenuItem name = {name} key = {name} image = {image} pk = {pk} name_zh = {name_zh} name_fr ={name_fr} language={language} />;\n});\n \n \nconst Arrow = ({ text, className }) => {\n  return (\n    <div\n      className={className}\n    >{text}</div>\n  );\n};\n \n \nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\n//const API_URL = process.env.REACT_APP_REST_API;\nconst API_URL = 'http://52.9.147.67:8080/';\n\nclass Game_List extends Component {\n\n    state = {\n        games: []\n    }\n\n    componentDidMount() {\n\n        const { term } = this.props.match.params;\n        // console.log(this.props.match.params);\n        // const game_type = localStorage.getItem('game_type');\n        var URL = API_URL + 'users/api/games/?term=' + term;\n        axios.get(URL, config)\n          .then(res => {\n            this.setState({\n              games: res.data\n          });\n          this.setState({game_to_render: Menu(this.state.games, this.props.lang)})\n        });\n    }\n\n    render() {\n      const games = this.state.games;\n\n      const menu = this.state.game_to_render;\n\n      return (\n        <div>\n\n            <TopNavbar />\n\n            <div className='game-container'> \n              <ScrollMenu\n                data={menu}\n                arrowLeft={ArrowLeft}\n                arrowRight={ArrowRight}\n                hideArrows={true}\n                hideSingleArrow={true}\n                dragging={false}\n                wheel={false}\n                alignCenter={false}\n              />\n            </div>\n\n            \n          \n\n        </div>\n      );\n    }\n  }\n\nconst mapStateToProps = (state) => {\n    return {\n        game_type: state.general.game_type,\n        lang: state.language.lang\n    }\n}\n  \nexport default connect(mapStateToProps, { game_detail })(Game_List);\n"]},"metadata":{},"sourceType":"module"}