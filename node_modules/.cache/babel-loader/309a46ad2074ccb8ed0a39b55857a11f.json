{"ast":null,"code":"import _classCallCheck from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/samet/myproject/myproject/ibet-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/samet/myproject/myproject/ibet-web/src/components/forget_password.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { config } from '../util_config';\nimport { FormattedMessage } from 'react-intl';\nimport { errors } from './errors';\nimport TopNavbar from \"./top_navbar\"; // Material design\n\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport blue from '@material-ui/core/colors/blue';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport classNames from 'classnames';\nimport '../css/forget_password.css';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: 'auto'\n    },\n    textField: {\n      flexBasis: 200,\n      width: 300,\n      height: 50\n    },\n    cssRoot: {\n      color: theme.palette.getContrastText(blue[300]),\n      backgroundColor: blue[300],\n      '&:hover': {\n        backgroundColor: blue[800]\n      }\n    }\n  };\n};\n\nvar API_URL = process.env.REACT_APP_REST_API;\n\nvar Forget_Password =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Forget_Password, _Component);\n\n  function Forget_Password(props) {\n    var _this;\n\n    _classCallCheck(this, Forget_Password);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Forget_Password).call(this, props));\n    _this.state = {\n      old_email: '',\n      success: false,\n      errorCode: '',\n      button_disable: true,\n      live_check_email: '',\n      email_not_exist: false\n    };\n    _this.onInputChange_old_email = _this.onInputChange_old_email.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Forget_Password, [{\n    key: \"onInputChange_old_email\",\n    value: function onInputChange_old_email(event) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!event.target.value.match(re)) {\n        this.setState({\n          live_check_email: true,\n          button_disable: true\n        });\n      } else {\n        this.setState({\n          live_check_email: false,\n          button_disable: false\n        });\n      }\n\n      this.setState({\n        old_email: event.target.value,\n        email_not_exist: false\n      });\n    } //  Do not delete the below function, I saved it for future use\n    // onFormSubmit(event){\n    //     event.preventDefault();\n    //     const body = {\n    //         email: this.state.old_email\n    //     }\n    //     axios.get(API_URL + `users/api/checkemailexist/?email=${this.state.old_email}`, config)\n    //     .then(res => {\n    //         if (res.data === 'Exist'){\n    //             axios.post(API_URL + 'users/api/reset-password/', body, config)\n    //             .then(res => {\n    //                 this.setState({success: true})\n    //                 this.props.history.push(\"/email_sent\")\n    //             })\n    //             .catch((err) => {\n    //                 this.setState({errorCode: errors.EMAIL_NOT_VALID});\n    //             });\n    //         }else{\n    //             this.setState({email_not_exist: true})\n    //         }\n    //     })\n    // }\n\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      axios.post(API_URL + \"users/api/generatepasswordcode/\", {\n        email: this.state.old_email\n      }, config).then(function (res) {\n        if (res.data === 'Success') {\n          axios.post(API_URL + \"users/api/sendresetpasswordcode/\", {\n            email: _this2.state.old_email\n          }, config).then(function (res) {\n            _this2.setState({\n              success: true\n            });\n\n            localStorage.setItem('forget-password-inprogress', 'true');\n\n            _this2.props.history.push(\"/email_sent/\".concat(_this2.state.old_email));\n          }).catch(function (err) {\n            _this2.setState({\n              errorCode: errors.EMAIL_NOT_VALID\n            });\n          });\n        } else {\n          _this2.setState({\n            email_not_exist: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n\n      var showErrors = function showErrors() {\n        if (_this3.state.success) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"email_sent.message\",\n            defaultMessage: \"An email has been sent to you email address to reset your password\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }));\n        } else if (_this3.state.errorCode === errors.EMAIL_NOT_VALID) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"forget_password.email_not_valid\",\n            defaultMessage: \"Email is not valid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }));\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(TopNavbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"forget-password-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"forget-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"forget_password.enter_email\",\n        defaultMessage: \"Enter your email address: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"forget_password.mail\",\n        defaultMessage: \"Email: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(TextField, {\n        id: \"outlined-adornment-password\",\n        className: classNames(classes.margin, classes.textField),\n        variant: \"outlined\",\n        type: 'text',\n        label: \"Email\",\n        value: this.state.old_email,\n        onChange: this.onInputChange_old_email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: this.state.button_disable,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"forget_password.confirm\",\n        defaultMessage: \"Confirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), this.state.live_check_email && React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \" \", React.createElement(FormattedMessage, {\n        id: \"error.email\",\n        defaultMessage: \"Email address not valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), \" \"), this.state.email_not_exist && React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \" \", React.createElement(FormattedMessage, {\n        id: \"forget_password.email_not_valid\",\n        defaultMessage: \"Email does not exsit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \" \")), showErrors()));\n    }\n  }]);\n\n  return Forget_Password;\n}(Component);\n\nexport default withStyles(styles)(withRouter(Forget_Password));","map":{"version":3,"sources":["/Users/samet/myproject/myproject/ibet-web/src/components/forget_password.js"],"names":["React","Component","axios","withRouter","config","FormattedMessage","errors","TopNavbar","withStyles","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","Button","blue","FormControlLabel","Checkbox","classNames","styles","theme","root","display","flexWrap","margin","textField","flexBasis","width","height","cssRoot","color","palette","getContrastText","backgroundColor","API_URL","process","env","REACT_APP_REST_API","Forget_Password","props","state","old_email","success","errorCode","button_disable","live_check_email","email_not_exist","onInputChange_old_email","bind","onFormSubmit","event","re","target","value","match","setState","preventDefault","post","email","then","res","data","localStorage","setItem","history","push","catch","err","EMAIL_NOT_VALID","classes","showErrors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { config } from '../util_config';\nimport { FormattedMessage } from 'react-intl';\nimport { errors } from './errors';\nimport TopNavbar from \"./top_navbar\";\n\n\n// Material design\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport blue from '@material-ui/core/colors/blue';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport classNames from 'classnames';\n\nimport '../css/forget_password.css';\n\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n\n    margin: {\n      margin: 'auto',\n    },\n\n    textField: {\n      flexBasis: 200,\n      width: 300,\n      height: 50\n    },\n\n    cssRoot: {\n        color: theme.palette.getContrastText(blue[300]),\n        backgroundColor: blue[300],\n        '&:hover': {\n          backgroundColor: blue[800],\n        },\n      },\n  });\n\n\nconst API_URL = process.env.REACT_APP_REST_API;\n\nclass Forget_Password extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n           old_email: '',\n           success: false,\n           errorCode: '',\n\n           button_disable: true,\n\n           live_check_email: '',\n\n           email_not_exist: false\n        }\n\n        this.onInputChange_old_email  = this.onInputChange_old_email.bind(this);\n        this.onFormSubmit             = this.onFormSubmit.bind(this);\n    }\n\n    onInputChange_old_email(event){\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!event.target.value.match(re)){\n            this.setState({live_check_email: true, button_disable: true})\n        }else{\n            this.setState({live_check_email: false, button_disable: false})\n        }\n        this.setState({old_email: event.target.value, email_not_exist: false});\n    }\n\n\n    //  Do not delete the below function, I saved it for future use\n\n    // onFormSubmit(event){\n    //     event.preventDefault();\n      \n    //     const body = {\n    //         email: this.state.old_email\n    //     }\n\n    //     axios.get(API_URL + `users/api/checkemailexist/?email=${this.state.old_email}`, config)\n    //     .then(res => {\n    //         if (res.data === 'Exist'){\n    //             axios.post(API_URL + 'users/api/reset-password/', body, config)\n    //             .then(res => {\n    //                 this.setState({success: true})\n    //                 this.props.history.push(\"/email_sent\")\n    //             })\n    //             .catch((err) => {\n    //                 this.setState({errorCode: errors.EMAIL_NOT_VALID});\n    //             });\n    //         }else{\n    //             this.setState({email_not_exist: true})\n    //         }\n    //     })\n    // }\n\n\n    onFormSubmit(event){\n        event.preventDefault();\n\n        axios.post(API_URL + `users/api/generatepasswordcode/`, {email: this.state.old_email}, config)\n        .then(res => {\n            if (res.data === 'Success'){\n                axios.post(API_URL + `users/api/sendresetpasswordcode/`, {email: this.state.old_email}, config)\n                .then(res => {\n                    this.setState({success: true})\n                    localStorage.setItem('forget-password-inprogress', 'true')\n                    this.props.history.push(`/email_sent/${this.state.old_email}`)\n                })\n                .catch((err) => {\n                    this.setState({errorCode: errors.EMAIL_NOT_VALID});\n                });\n            }else{\n                this.setState({email_not_exist: true})\n            }\n        })\n    }\n\n\n    render(){\n\n        const { classes } = this.props;\n\n        const showErrors = () => {\n            if (this.state.success) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"email_sent.message\" defaultMessage='An email has been sent to you email address to reset your password' /> \n                    </div>\n                );\n            } else if (this.state.errorCode === errors.EMAIL_NOT_VALID) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"forget_password.email_not_valid\" defaultMessage='Email is not valid' /> \n                    </div>\n                );\n            }\n        }\n\n        return (\n            <div> \n                <TopNavbar />\n\n                <div className='forget-password-form'> \n\n                    <div className='forget-title'> \n                        <FormattedMessage id=\"forget_password.enter_email\" defaultMessage='Enter your email address: ' />\n                    </div>\n\n                    <br/>\n\n                    <form onSubmit={this.onFormSubmit} >\n\n                        <div>\n                            <FormattedMessage id=\"forget_password.mail\" defaultMessage='Email: ' />\n                        </div>\n\n                        <TextField\n                            id=\"outlined-adornment-password\"\n                            className={classNames(classes.margin, classes.textField)}\n                            variant=\"outlined\"\n                            type={'text'}\n                            label=\"Email\"\n                            value={this.state.old_email}\n                            onChange={this.onInputChange_old_email}\n                        />\n\n                        <br/>\n                        <br/>\n    \n\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled = {this.state.button_disable} \n                            type=\"submit\" \n                        > \n                            <FormattedMessage id=\"forget_password.confirm\" defaultMessage='Confirm' />\n                        </Button>\n                        \n\n                        <br/>\n\n\n                        {this.state.live_check_email && <div style={{color: 'red'}}> <FormattedMessage  id=\"error.email\" defaultMessage='Email address not valid' /> </div>}\n\n                        {this.state.email_not_exist && <div style={{color: 'red'}}> <FormattedMessage  id=\"forget_password.email_not_valid\" defaultMessage='Email does not exsit' /> </div>}\n                    </form>\n\n\n                    {\n                        showErrors()\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default  withStyles(styles)(withRouter(Forget_Password));"]},"metadata":{},"sourceType":"module"}